!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
COMMAND_FLAG	bespeckle.h	/^#define COMMAND_FLAG /;"	d
CONTINUE	bespeckle.h	/^#define CONTINUE /;"	d
Effect	bespeckle.h	/^typedef struct Effect {$/;"	s
Effect	bespeckle.h	/^} Effect;$/;"	t	typeref:struct:Effect
EffectTable	bespeckle.h	/^typedef struct EffectTable {$/;"	s
EffectTable	bespeckle.h	/^} EffectTable;$/;"	t	typeref:struct:EffectTable
FOUND	bespeckle.h	/^#define FOUND /;"	d
HSVA_A_MASK	bespeckle.h	/^#define HSVA_A_MASK /;"	d
HSVA_A_SHIFT	bespeckle.h	/^#define HSVA_A_SHIFT /;"	d
HSVA_H_MASK	bespeckle.h	/^#define HSVA_H_MASK /;"	d
HSVA_H_SHIFT	bespeckle.h	/^#define HSVA_H_SHIFT /;"	d
HSVA_S_MASK	bespeckle.h	/^#define HSVA_S_MASK /;"	d
HSVA_S_SHIFT	bespeckle.h	/^#define HSVA_S_SHIFT /;"	d
HSVA_V_MASK	bespeckle.h	/^#define HSVA_V_MASK /;"	d
HSVA_V_SHIFT	bespeckle.h	/^#define HSVA_V_SHIFT /;"	d
NOT_FOUND	bespeckle.h	/^#define NOT_FOUND /;"	d
NULL	bespeckle.h	/^#define NULL /;"	d
NUM_EFFECTS	bespeckle.h	/^#define NUM_EFFECTS /;"	d
RGBA_B_MASK	bespeckle.h	/^#define RGBA_B_MASK /;"	d
RGBA_B_SHIFT	bespeckle.h	/^#define RGBA_B_SHIFT /;"	d
RGBA_EMPTY	bespeckle.h	/^#define RGBA_EMPTY /;"	d
RGBA_G_MASK	bespeckle.h	/^#define RGBA_G_MASK /;"	d
RGBA_G_SHIFT	bespeckle.h	/^#define RGBA_G_SHIFT /;"	d
RGBA_R_MASK	bespeckle.h	/^#define RGBA_R_MASK /;"	d
RGBA_R_SHIFT	bespeckle.h	/^#define RGBA_R_SHIFT /;"	d
RGB_EMPTY	bespeckle.h	/^#define RGB_EMPTY /;"	d
STOP	bespeckle.h	/^#define STOP	/;"	d
STRIP_LENGTH	bespeckle.h	/^#define STRIP_LENGTH /;"	d
TICK_LENGTH	bespeckle.h	/^#define TICK_LENGTH /;"	d
_msg_nothing	bespeckle.c	/^void _msg_nothing(Effect* eff, canpacket_t* data){$/;"	f
_pixel_solid	bespeckle.c	/^rgba_t _pixel_solid(Effect* eff, position_t pos){$/;"	f
_tick_nothing	bespeckle.c	/^bool_t _tick_nothing(Effect* eff, fractick_t ft){$/;"	f
a	bespeckle.h	/^		uint8_t a;$/;"	m	struct:__anon1
a	bespeckle.h	/^		unsigned a:5;$/;"	m	struct:__anon2
b	bespeckle.h	/^		uint8_t b;$/;"	m	struct:__anon1
bool_t	bespeckle.h	/^typedef uint8_t bool_t;$/;"	t
canpacket_t	bespeckle.h	/^} canpacket_t;$/;"	t	typeref:struct:__anon3
cmd	bespeckle.h	/^	uint8_t cmd;$/;"	m	struct:__anon3
compose_all	bespeckle.c	/^void compose_all(Effect* eff, rgb_t* strip){ $/;"	f
data	bespeckle.h	/^	char data[];$/;"	m	struct:Effect
data	bespeckle.h	/^	uint8_t data[6];$/;"	m	struct:__anon3
effect_table	bespeckle.c	/^EffectTable effect_table[NUM_EFFECTS] = {$/;"	v
eid	bespeckle.h	/^	uint8_t eid;$/;"	m	struct:EffectTable
fractick_t	bespeckle.h	/^typedef uint8_t fractick_t; \/\/ sizeof(fractick_t) > TICK_LENGTH$/;"	t
free_effect	bespeckle.c	/^void free_effect(Effect* eff){$/;"	f
g	bespeckle.h	/^		uint8_t g;$/;"	m	struct:__anon1
h	bespeckle.h	/^		unsigned h:8;$/;"	m	struct:__anon2
hsva_t	bespeckle.h	/^} hsva_t;$/;"	t	typeref:struct:__anon2
hsva_to_rgba	bespeckle.c	/^rgba_t hsva_to_rgba(hsva_t in){$/;"	f
main	bespeckle.c	/^int main(){ $/;"	f
message	bespeckle.c	/^void message(canpacket_t* data){$/;"	f
mix_rgb	bespeckle.c	/^rgb_t mix_rgb(rgba_t top, rgb_t bot){$/;"	f
mix_rgba	bespeckle.c	/^rgba_t mix_rgba(rgba_t top, rgba_t bot){$/;"	f
msg	bespeckle.h	/^	void (* msg)(struct Effect *, canpacket_t*);$/;"	m	struct:EffectTable
msg_all	bespeckle.c	/^bool_t msg_all(Effect* eff, canpacket_t* data){$/;"	f
next	bespeckle.h	/^	struct Effect * next;$/;"	m	struct:Effect	typeref:struct:Effect::Effect
pack_rgba	bespeckle.c	/^rgb_t pack_rgba(rgba_t in){$/;"	f
pixel	bespeckle.h	/^	rgba_t (* pixel)(struct Effect *, position_t);$/;"	m	struct:EffectTable
position_t	bespeckle.h	/^typedef uint8_t position_t; \/\/ sizeof(position_t) > STRIP_LENGTH$/;"	t
push_effect	bespeckle.c	/^void push_effect(Effect* stack, Effect* eff){$/;"	f
r	bespeckle.h	/^		uint8_t r;$/;"	m	struct:__anon1
rgb_t	bespeckle.h	/^typedef uint16_t rgb_t;$/;"	t
rgba_t	bespeckle.h	/^} rgba_t;$/;"	t	typeref:struct:__anon1
s	bespeckle.h	/^		unsigned s:5;$/;"	m	struct:__anon2
size	bespeckle.h	/^	uint8_t size;$/;"	m	struct:EffectTable
table	bespeckle.h	/^	struct EffectTable* table;$/;"	m	struct:Effect	typeref:struct:Effect::EffectTable
tick	bespeckle.h	/^	bool_t (* tick)(struct Effect *, fractick_t);$/;"	m	struct:EffectTable
tick_all	bespeckle.c	/^Effect* tick_all(Effect* eff, fractick_t ft){$/;"	f
uid	bespeckle.h	/^	uint8_t uid;$/;"	m	struct:Effect
uid	bespeckle.h	/^	uint8_t uid;$/;"	m	struct:__anon3
unpack_rgb	bespeckle.c	/^rgba_t unpack_rgb(rgb_t packed){$/;"	f
v	bespeckle.h	/^		unsigned v:5;$/;"	m	struct:__anon2
